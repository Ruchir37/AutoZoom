import java.text.DecimalFormat;

public class NumberToWordsConverter {

    private static final String[] units = {
        "", "One", "Two", "Three", "Four", "Five",
        "Six", "Seven", "Eight", "Nine", "Ten", "Eleven",
        "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen",
        "Seventeen", "Eighteen", "Nineteen"
    };

    private static final String[] tens = {
        "", "", "Twenty", "Thirty", "Forty", "Fifty",
        "Sixty", "Seventy", "Eighty", "Ninety"
    };

    // Main method to convert a double into words
    public static String convertDoubleToWords(double amount) {
        if (amount == 0) return "Zero Rupees Only";

        long rupees = (long) amount;
        int paise = (int) Math.round((amount - rupees) * 100);

        StringBuilder result = new StringBuilder();
        result.append(convertNumberToWords(rupees)).append(" Rupees");

        if (paise > 0) {
            result.append(" Point ").append(twoDigitToWords(paise));
        }

        result.append(" Only");
        return result.toString().trim();
    }

    // Helper: Convert full number (up to crore)
    private static String convertNumberToWords(long number) {
        if (number == 0) return "Zero";

        StringBuilder words = new StringBuilder();

        if (number / 10000000 > 0) {
            words.append(convertNumberToWords(number / 10000000)).append(" Crore ");
            number %= 10000000;
        }

        if (number / 100000 > 0) {
            words.append(convertNumberToWords(number / 100000)).append(" Lakh ");
            number %= 100000;
        }

        if (number / 1000 > 0) {
            words.append(convertNumberToWords(number / 1000)).append(" Thousand ");
            number %= 1000;
        }

        if (number / 100 > 0) {
            words.append(convertNumberToWords(number / 100)).append(" Hundred ");
            number %= 100;
        }

        if (number > 0) {
            if (words.length() > 0) words.append("and ");
            words.append(twoDigitToWords((int) number));
        }

        return words.toString().trim();
    }

    // Helper: Convert 2-digit numbers
    private static String twoDigitToWords(int number) {
        if (number < 20) return units[number];
        return tens[number / 10] + (number % 10 > 0 ? " " + units[number % 10] : "");
    }

    // Example usage
    public static void main(String[] args) {
        double amount = 123.45;
        System.out.println(convertDoubleToWords(amount));
        // Output: One Hundred Twenty Three Point Forty Five Rupees Only
    }
}
