package com.example.yourapp;

import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.inputmethod.EditorInfo;
import android.widget.Toast;

import androidx.appcompat.widget.AppCompatEditText;

public class BackDoneAwareEditText extends AppCompatEditText {

    public interface KeyboardListener {
        void onDonePressed();
        void onKeyboardClosed();
    }

    private KeyboardListener keyboardListener;
    private boolean isKeyboardVisible = false;

    public BackDoneAwareEditText(Context context) {
        super(context);
        init();
    }

    public BackDoneAwareEditText(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public BackDoneAwareEditText(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init();
    }

    private void init() {
        // Detect Done key
        setOnEditorActionListener((v, actionId, event) -> {
            if (actionId == EditorInfo.IME_ACTION_DONE) {
                if (keyboardListener != null) keyboardListener.onDonePressed();
                return true;
            }
            return false;
        });

        // Detect keyboard close (back OR down arrow)
        getViewTreeObserver().addOnGlobalLayoutListener(() -> {
            Rect r = new Rect();
            getWindowVisibleDisplayFrame(r);
            int screenHeight = getRootView().getHeight();
            int keypadHeight = screenHeight - r.bottom;

            boolean isNowVisible = keypadHeight > screenHeight * 0.15;

            if (isKeyboardVisible && !isNowVisible && hasFocus()) {
                // Keyboard was visible, now hidden
                if (keyboardListener != null) keyboardListener.onKeyboardClosed();
            }
            isKeyboardVisible = isNowVisible;
        });
    }

    public void setKeyboardListener(KeyboardListener listener) {
        this.keyboardListener = listener;
    }

    @Override
    public boolean dispatchKeyEventPreIme(KeyEvent event) {
        // Back key detection (still triggers keyboardClosed)
        if (event.getKeyCode() == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_UP) {
            if (keyboardListener != null) keyboardListener.onKeyboardClosed();
        }
        return super.dispatchKeyEventPreIme(event);
    }
}
